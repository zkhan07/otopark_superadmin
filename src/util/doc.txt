
function createData(name, mobile, email, doj, aadharID, action) {
  return {
    name,
    mobile,
    email,
    doj,
    aadharID,
    action
  };
}
const headCells = [
  {
    id: "name",
    label: "Name",
    minWidth: 170
  },
  {
    id: "mobile",
    label: "Mobile",
    minWidth: 170
  },
  {
    id: "email",
    label: "Email",
    minWidth: 170
  },
  {
    id: "doj",
    label: "DOJ",
    minWidth: 170
  },
  {
    id: "aadharID",
    label: "Aadhar ID",
    minWidth: 170
  },
  {
    id: "action",
    label: "Action",
    minWidth: 170
  }
];

const rows = [
  createData(
    "zaid",
    "2855667788",
    "khan@gmail.com",
    "24 / 02 / 2020",
    123456789123,
    "View Details"
  ),
  createData(
    "zaid",
    2855667788,
    "khan@gmail.com",
    "24 / 02 / 2020",
    123456789123,
    "View Details"
  ),
  createData(
    "zaid",
    2855667788,
    "khan@gmail.com",
    "24 / 02 / 2020",
    123456789123,
    "View Details"
  ),
  createData(
    "zaid",
    2855667788,
    "khan@gmail.com",
    "24 / 02 / 2020",
    123456789123,
    "View Details"
  ),
  createData(
    "zaid",
    2855667788,
    "khan@gmail.com",
    "24 / 02 / 2020",
    123456789123,
    "View Details"
  ),
  createData(
    "zaid",
    2855667788,
    "khan@gmail.com",
    "24 / 02 / 2020",
    123456789123,
    "View Details"
  )
];

    <TableCell
                        component="th"
                        id={labelId}
                        scope="row"
                        padding="none"
                      >
                        {row.name}
                      </TableCell>
                      <TableCell align="right">{row.mobile}</TableCell>
                      <TableCell align="right">{row.email}</TableCell>
                      <TableCell align="right">{row.doj}</TableCell>
                      <TableCell align="right">{row.aadharID}</TableCell>
                      <TableCell align="right">{row.action}</TableCell>

/////user ends/////


////parking

function createData(
  listingID,
  parkingType,
  size,
  displayName,
  hourlyRate,
  autoParking,
  parkingEnabledStatus,
  createdOn,
  action
) {
  return {
    listingID,
    parkingType,
    size,
    displayName,
    hourlyRate,
    autoParking,
    parkingEnabledStatus,
    createdOn,
    action
  };
}
const headCells = [
  {
    id: "listingID",

    label: "Listing ID"
  },
  {
    id: "parkingType",

    label: "Parking Type"
  },
  {
    id: "size",

    label: "Size"
  },
  {
    id: "displayName",

    label: "Display Name"
  },
  {
    id: "hourlyRate",

    label: "Hourly Rate"
  },
  {
    id: "autoParking",

    label: "Auto Parking"
  },
  {
    id: "parkingEnabledStatus",

    label: "Parking Enabled Status"
  },
  {
    id: "createdOn",

    label: "Created On"
  },
  {
    id: "action",

    label: "Action"
  }
];

const rows = [
  createData(
    "Jahad",
    "Commercial",
    "SUV",
    "Heara Panan Parking",
    100,
    "-",
    "-",
    "27 Jan 2020",
    "View Details"
  ),
  createData(
    "Zahad",
    "Commercial",
    "SUV",
    "Heara Panan Parking",
    100,
    "-",
    "-",
    "27 Jan 2020",
    "View Details"
  ),
  createData(
    "Pahad",
    "Commercial",
    "SUV",
    "Heara Panan Parking",
    100,
    "-",
    "-",
    "27 Jan 2020",
    "View Details"
  ),
  createData(
    "Kahad",
    "Commercial",
    "SUV",
    "Heara Panan Parking",
    100,
    "-",
    "-",
    "27 Jan 2020",
    "View Details"
  ),
  createData(
    "Fahad",
    "Commercial",
    "SUV",
    "Heara Panan Parking",
    100,
    "-",
    "-",
    "27 Jan 2020",
    "View Details"
  ),
  createData(
    "Arman",
    "Commercial",
    "SUV",
    "Heara Panan Parking",
    100,
    "-",
    "-",
    "27 Jan 2020",
    "View Details"
  )
];

////parking ends


/////support start

function createData(supportID, subject, message, userName, userMobile, action) {
  return {
    supportID,
    subject,
    message,
    userName,
    userMobile,
    action
  };
}
const headCells = [
  { id: "supportID", label: "Support ID", minWidth: 170 },
  { id: "subject", label: "Subject", minWidth: 100 },
  { id: "message", label: "Message", minWidth: 170 },
  { id: "userName", label: "User Name", minWidth: 170 },
  { id: "userMobile", label: "User Mobile", minWidth: 100 },
  { id: "action", label: "Action", minWidth: 100 }
];

const rows = [
  createData(
    "At42012",
    "Parking Issues",
    "I have not received parking tickets",
    " khan@gmail.com",
    "2536145456",
    " View Details"
  ),
  createData(
    "At42012",
    "Parking Issues",
    "I have not received parking tickets",
    " khan@gmail.com",
    "2536145456",
    " View Details"
  ),
  createData(
    "At42012",
    "Parking Issues",
    "I have not received parking tickets",
    " khan@gmail.com",
    "2536145456",
    " View Details"
  ),
  createData(
    "At42012",
    "Parking Issues",
    "I have not received parking tickets",
    " khan@gmail.com",
    "2536145456",
    " View Details"
  ),
  createData(
    "At42012",
    "Parking Issues",
    "I have not received parking tickets",
    " khan@gmail.com",
    "2536145456",
    " View Details"
  ),
  createData(
    "At42012",
    "Parking Issues",
    "I have not received parking tickets",
    " khan@gmail.com",
    "2536145456",
    " View Details"
  ),
  createData(
    "At42012",
    "Parking Issues",
    "I have not received parking tickets",
    " khan@gmail.com",
    "2536145456",
    " View Details"
  )
];

 <TableCell
                        component="th"
                        id={labelId}
                        scope="row"
                        padding="none"
                        style={{ padding: "20px !important" }}
                      >
                        {row.supportID}
                      </TableCell>
                      <TableCell align="right">{row.subject}</TableCell>
                      <TableCell align="right">{row.message}</TableCell>
                      <TableCell align="right">{row.userName}</TableCell>
                      <TableCell align="right">{row.userMobile}</TableCell>
                      <TableCell align="right">{row.action}</TableCell>


///suport ends


/////payemt start
function createData(
  name,
  mobile,
  email,
  doj,
  booking,
  tax,
  commision,
  payout,
  roundoff,
  action,
  code,
  population,
  size
) {
  return {
    name,
    mobile,
    email,
    doj,
    booking,
    tax,
    commision,
    payout,
    roundoff,
    action,
    code,
    population,
    size
  };
}
const headCells = [
  { id: "name", label: "Name", minWidth: 170 },
  { id: "mobile", label: "Mobile", minWidth: 100 },
  { id: "email", label: "Email", minWidth: 170 },
  { id: "doj", label: "DOJ", minWidth: 170 },
  { id: "booking", label: "Booking Amount", minWidth: 100 },
  { id: "tax", label: "Tax Amount", minWidth: 100 },
  { id: "commision", label: "otopark Commision", minWidth: 100 },
  { id: "payout", label: "payout Pending", minWidth: 100 },
  { id: "roundoff", label: "roundoff Amount", minWidth: 100 },
  { id: "action", label: "Action", minWidth: 100 }
];

const rows = [
  createData(
    "zaid 1",
    "8227264657",
    "khan@gmail.com",
    " 2020/04/3",
    "160.00",
    " 28.00",
    " 28.00",
    " 28.00",
    " 28.00",
    "View Details"
  ),
  createData(
    "zaid",
    "8227264657",
    "khan@gmail.com",
    " 2020/04/3",
    "160.00",
    " 28.00",
    " 28.00",
    " 28.00",
    " 28.00",
    "View Details"
  ),
  createData(
    "zaid",
    "8227264657",
    "khan@gmail.com",
    " 2020/04/3",
    "160.00",
    " 28.00",
    " 28.00",
    " 28.00",
    " 28.00",
    "View Details"
  ),
  createData(
    "zaid",
    "8227264657",
    "khan@gmail.com",
    " 2020/04/3",
    "160.00",
    " 28.00",
    " 28.00",
    " 28.00",
    " 28.00",
    "View Details"
  ),
  createData(
    "zaid",
    "8227264657",
    "khan@gmail.com",
    " 2020/04/3",
    "160.00",
    " 28.00",
    " 28.00",
    " 28.00",
    " 28.00",
    "View Details"
  ),
  createData(
    "zaid",
    "8227264657",
    "khan@gmail.com",
    " 2020/04/3",
    "160.00",
    " 28.00",
    " 28.00",
    " 28.00",
    " 28.00",
    "View Details"
  ),
  createData(
    "zaid",
    "8227264657",
    "khan@gmail.com",
    " 2020/04/3",
    "160.00",
    " 28.00",
    " 28.00",
    " 28.00",
    " 28.00",
    "View Details"
  ),
  createData(
    "zaid",
    "8227264657",
    "khan@gmail.com",
    " 2020/04/3",
    "160.00",
    " 28.00",
    " 28.00",
    " 28.00",
    " 28.00",
    "View Details"
  ),
  createData(
    "zaid",
    "8227264657",
    "khan@gmail.com",
    " 2020/04/3",
    "160.00",
    " 28.00",
    " 28.00",
    " 28.00",
    " 28.00",
    "View Details"
  ),
  createData(
    "zaid",
    "8227264657",
    "khan@gmail.com",
    " 2020/04/3",
    "160.00",
    " 28.00",
    " 28.00",
    " 28.00",
    " 28.00",
    "View Details"
  ),
  createData(
    "zaid",
    "8227264657",
    "khan@gmail.com",
    " 2020/04/3",
    "160.00",
    " 28.00",
    " 28.00",
    " 28.00",
    " 28.00",
    "View Details"
  ),
  createData(
    "zaid",
    "8227264657",
    "khan@gmail.com",
    " 2020/04/3",
    "160.00",
    " 28.00",
    " 28.00",
    " 28.00",
    " 28.00",
    "View Details"
  )
];

<TableCell
                        component="th"
                        id={labelId}
                        scope="row"
                        padding="none"
                        // style={{ padding: "20px !important" }}
                      >
                        {row.name}
                      </TableCell>
                      <TableCell align="right">{row.mobile}</TableCell>
                      <TableCell align="right">{row.email}</TableCell>
                      <TableCell align="right">{row.doj}</TableCell>
                      <TableCell align="right">{row.booking}</TableCell>
                      <TableCell align="right">{row.tax}</TableCell>
                      <TableCell align="right">{row.commision}</TableCell>
                      <TableCell align="right">{row.payout}</TableCell>
                      <TableCell align="right">{row.roundoff}</TableCell>
                      <TableCell align="right">{row.action}</TableCell>


///payment ends


////notification start


const columns = [
  { id: "title", label: "Title", minWidth: 170 },
  { id: "discription", label: "Discription", minWidth: 270 },
  { id: "image", label: "Image", minWidth: 100 },
  { id: "receiver", label: "Receiver", minWidth: 100 },
  { id: "action", label: "Action", minWidth: 100 }
];

function createData(title, discription, image, receiver, action) {
  return {
    title,
    discription,
    image,
    receiver,
    action
  };
}

const rows = [
  createData("Earn Money!!", "I have not received", "-", "all", "29 Oct 2020"),
  createData("Earn Money!!", "I have not received", "-", "all", "29 Oct 2020"),
  createData("Earn Money!!", "I have not received", "-", "all", "29 Oct 2020"),
  createData("Earn Money!!", "I have not received", "-", "all", "29 Oct 2020"),
  createData("Earn Money!!", "I have not received", "-", "all", "29 Oct 2020"),
  createData("Earn Money!!", "I have not received", "-", "all", "29 Oct 2020"),
  createData("Earn Money!!", "I have not received", "-", "all", "29 Oct 2020"),
  createData("Earn Money!!", "I have not received", "-", "all", "29 Oct 2020"),
  createData("Earn Money!!", "I have not received", "-", "all", "29 Oct 2020")
];


//// parking Appbar/////


import React from "react";
import AppBar from "@material-ui/core/AppBar";
import Toolbar from "@material-ui/core/Toolbar";
import InputBase from "@material-ui/core/InputBase";
import MenuItem from "@material-ui/core/MenuItem";
import SearchIcon from "@material-ui/icons/Search";
import Button from "@material-ui/core/Button";
import FormControl from "@material-ui/core/FormControl";
import Select from "@material-ui/core/Select";
import InputLabel from "@material-ui/core/InputLabel";
import { useStyles } from "./css";

export default function PrimarySearchAppBar() {
  const classes = useStyles();
  const [state, setState] = React.useState({
    age: "",
    name: "hai"
  });

  const handleChange = event => {
    const name = event.target.name;
    setState({
      ...state,
      [name]: event.target.value
    });
  };

  return (
    <div className={classes.grow}>
      <AppBar
        position="static"
        style={{
          backgroundColor: "white"
          //  boxShadow: "5px 5px 5px 5px white"
        }}
      >
        <Toolbar>
          <div
            style={{
              backgroundColor: "#00BBDC",
              borderRadius: "50px",
              padding: "5px"
            }}
          >
            <img
              width="25px"
              height="25px"
              style={{ marginBottom: "-10px" }}
              src={require("../../../assets/icons/whiteBookingIcon.svg")}
            />
            <select className={classes.dropdown}>
              <option selected>january 1,2020 - oct 5,2023</option>
              <option>january 2,2020 - oct 5,2023</option>
              <option>january 3,2020 - oct 5,2023</option>
              <option>january 4,2020 - oct 5,2023</option>
              <option>january 5,2020 - oct 5,2023</option>
              <option>january 6,2020 - oct 5,2023</option>
            </select>
          </div>
          <div className={classes.grow} />
          {/* buttons start */}
          <div>
            <Button className={classes.button} variant="outlined">
              Verified
            </Button>
            <Button
              className={classes.button}
              variant="outlined"
              style={{ fontSize: "10px" }}
            >
              Verification
              <br />
              Pending
            </Button>
            <Button className={classes.button} variant="outlined">
              Rejected
            </Button>
            <Button className={classes.button} variant="outlined">
              Draft
            </Button>
            <Button
              className={classes.button}
              variant="outlined"
              style={{ fontSize: "10px" }}
            >
              Edit Requested <br /> Parking
            </Button>
          </div>
          <div className={classes.search}>
            <div className={classes.searchIcon}>
              <SearchIcon style={{ color: "grey" }} />
            </div>
            <InputBase
              placeholder="Search…"
              classes={{
                root: classes.inputRoot,
                input: classes.inputInput
              }}
              inputProps={{ "aria-label": "search" }}
            />
          </div>
        </Toolbar>
      </AppBar>
    </div>
  );
}


///// USER APPBAR FOR SCROLL /////

import React from "react";
import { fade, makeStyles } from "@material-ui/core/styles";
import AppBar from "@material-ui/core/AppBar";
import Toolbar from "@material-ui/core/Toolbar";
import IconButton from "@material-ui/core/IconButton";
import Typography from "@material-ui/core/Typography";
import InputBase from "@material-ui/core/InputBase";
import Badge from "@material-ui/core/Badge";
import MenuItem from "@material-ui/core/MenuItem";
import Menu from "@material-ui/core/Menu";
import MenuIcon from "@material-ui/icons/Menu";
import SearchIcon from "@material-ui/icons/Search";
import AccountCircle from "@material-ui/icons/AccountCircle";
import MailIcon from "@material-ui/icons/Mail";
import NotificationsIcon from "@material-ui/icons/Notifications";
import MoreIcon from "@material-ui/icons/MoreVert";
import Button from "@material-ui/core/Button";
import FormControl from "@material-ui/core/FormControl";
import Select from "@material-ui/core/Select";
import InputLabel from "@material-ui/core/InputLabel";
import { useStyles } from "./css";

export default function PrimarySearchAppBar() {
  const classes = useStyles();
  const [state, setState] = React.useState({
    age: "",
    name: "hai"
  });

  const handleChange = event => {
    const name = event.target.name;
    setState({
      ...state,
      [name]: event.target.value
    });
  };

  return (
    <div className={classes.grow}>
      <AppBar
        position="static"
        style={{ display: "flex", backgroundColor: "white" }}
      >
        <Toolbar>
          <div
            style={{
              backgroundColor: "#00BBDC",
              borderRadius: "50px",
              padding: "5px"
            }}
          >
            <img
              width="25px"
              height="25px"
              style={{ marginBottom: "-10px" }}
              src={require("../../../assets/icons/whiteBookingIcon.svg")}
            />
            <select className={classes.dropdown}>
              <option selected>january 1,2020 - oct 5,2023</option>
              <option>january 2,2020 - oct 5,2023</option>
              <option>january 3,2020 - oct 5,2023</option>
              <option>january 4,2020 - oct 5,2023</option>
              <option>january 5,2020 - oct 5,2023</option>
              <option>january 6,2020 - oct 5,2023</option>
            </select>
          </div>
          <div className={classes.grow} />
          {/* button */}
          <div>
            <Button className={classes.button} variant="outlined">
              All Users
            </Button>
            <Button className={classes.button} variant="outlined">
              Active Users
            </Button>
            <Button className={classes.button} variant="outlined">
              Inactive Users
            </Button>
            <Button className={classes.button} variant="outlined">
              Host Users
            </Button>
            <Button className={classes.button} variant="outlined">
              Guest Users
            </Button>
          </div>
          <div className={classes.search}>
            <div className={classes.searchIcon}>
              <SearchIcon style={{ color: "grey" }} />
            </div>
            <InputBase
              placeholder="Search…"
              classes={{
                root: classes.inputRoot,
                input: classes.inputInput
              }}
              inputProps={{ "aria-label": "search" }}
            />
          </div>
        </Toolbar>
      </AppBar>
    </div>
  );
}



//////// List js //////

import React, { useState } from "react";
import { makeStyles } from "@material-ui/core/styles";
import ListSubheader from "@material-ui/core/ListSubheader";
import List from "@material-ui/core/List";
import ListItem from "@material-ui/core/ListItem";
import ListItemIcon from "@material-ui/core/ListItemIcon";
import ListItemText from "@material-ui/core/ListItemText";
import Toolbar from "@material-ui/core/Toolbar";
import AppBar from "@material-ui/core/AppBar";
import Collapse from "@material-ui/core/Collapse";
import InboxIcon from "@material-ui/icons/MoveToInbox";
import DraftsIcon from "@material-ui/icons/Drafts";
import SendIcon from "@material-ui/icons/Send";
import ExpandLess from "@material-ui/icons/ExpandLess";
import ExpandMore from "@material-ui/icons/ExpandMore";
import StarBorder from "@material-ui/icons/StarBorder";
import DashboardIcon from "@material-ui/icons/Dashboard";
import ShoppingCartIcon from "@material-ui/icons/ShoppingCart";

import BarChartIcon from "@material-ui/icons/BarChart";
import LayersIcon from "@material-ui/icons/Layers";
import AssignmentIcon from "@material-ui/icons/Assignment";
import PagesIcon from "@material-ui/icons/Pages";
import EqualizerIcon from "@material-ui/icons/Equalizer";
import HomeIcon from "@material-ui/icons/Home";
import PeopleIcon from "@material-ui/icons/People";
import LocalParkingIcon from "@material-ui/icons/LocalParking";
import CalendarTodayIcon from "@material-ui/icons/CalendarToday";
import VideocamIcon from "@material-ui/icons/Videocam";
import PersonIcon from "@material-ui/icons/Person";
import PaymentIcon from "@material-ui/icons/Payment";

import MessageIcon from "@material-ui/icons/Message";
import { Link } from "react-router-dom";
import { useStyles } from "./css";

export const list = [
  {
    icon: (
      <img
        src={require("../../../assets/icons/homeIcon.svg")}
        width="25px"
        height="25px"
      />
    ),
    primary: "Dashboard",
    to: "/otopark/superadmin/dashboard"
  },
  {
    icon: (
      <img
        src={require("../../../assets/icons/userIcon.svg")}
        width="25px"
        height="25px"
      />
    ),
    primary: "Users",
    to: "/otopark/superadmin/users"
  },
  {
    icon: (
      <img
        src={require("../../../assets/icons/parkingIcon.svg")}
        width="25px"
        height="25px"
      />
    ),
    primary: "Parking",
    to: "/otopark/superadmin/parking"
  },
  {
    icon: (
      <img
        src={require("../../../assets/icons/monthlyPassIcon.svg")}
        width="25px"
        height="25px"
      />
    ),
    primary: "Monthly Pass",
    to: "/otopark/superadmin/montlypass"
  },
  {
    icon: (
      <img
        src={require("../../../assets/icons/bookingIcon.svg")}
        width="25px"
        height="25px"
      />
    ),
    primary: "Booking",
    to: "/otopark/superadmin/booking"
  },
  {
    icon: (
      <img
        src={require("../../../assets/icons/hardwareIcon.svg")}
        width="25px"
        height="25px"
      />
    ),
    primary: "Hardware",
    to: "/otopark/superadmin/hardware"
  },
  {
    icon: (
      <img
        src={require("../../../assets/icons/supportIcon.svg")}
        width="25px"
        height="25px"
      />
    ),
    primary: "Support",
    to: "/otopark/superadmin/support"
  },
  {
    icon: (
      <img
        src={require("../../../assets/icons/paymentIcon.svg")}
        width="25px"
        height="25px"
      />
    ),
    primary: "Payments",
    to: "/otopark/superadmin/payment"
  },
  {
    icon: (
      <img
        src={require("../../../assets/icons/locationIcon.svg")}
        width="25px"
        height="25px"
      />
    ),
    primary: "Location",
    to: "#"
  },
  {
    icon: (
      <img
        src={require("../../../assets/icons/notificationIcon.svg")}
        width="25px"
        height="25px"
      />
    ),
    primary: "Notification",
    to: "/otopark/superadmin/notification"
  },
  {
    icon: (
      <img
        src={require("../../../assets/icons/couponIcon.svg")}
        width="25px"
        height="25px"
      />
    ),
    primary: "Coupons",
    to: "#"
  },
  {
    icon: (
      <img
        src={require("../../../assets/icons/settingsIcon.svg")}
        width="25px"
        height="25px"
      />
    ),
    primary: "Settings",
    to: "#"
  }
];

export default function NestedList() {
  const classes = useStyles();
  const [open1, setOpen1] = React.useState(false);
  const [open2, setOpen2] = React.useState(false);
  const [open3, setOpen3] = React.useState(false);
  const [open4, setOpen4] = React.useState(false);
  const [value, setValue] = useState({});

  const dashboardClick = () => {
    setOpen1(!open1);
  };

  const pagesClick = () => {
    setOpen2(!open2);
  };

  const userClick = () => {
    setOpen3(!open3);
  };

  const applicationClick = () => {
    setOpen4(!open4);
  };

  const onclickfunction = e => {
    console.log(e);
    setValue(e);
  };
  return (
    // <AppBar
    //   position="static"
    //   style={{ display: "flex", backgroundColor: "white" }}
    // >
    //   <Toolbar className={classes.scrollBar}>
    <List
      component="nav"
      aria-labelledby="nested-list-subheader"
      subheader={
        <ListSubheader
          component="div"
          id="nested-list-subheader"
        ></ListSubheader>
      }
      className={classes.root}
    >
      {/* <br />
      <br /> */}
      {list &&
        list.map((item, id) => {
          return (
            <>
              {value && value === item.primary ? (
                <Link to={item.to} className={classes.linkstyleprimary}>
                  <ListItem button   classes={{ selected: classes.selected }}>
                    <ListItemIcon>{item.icon}</ListItemIcon>
                    <ListItemText
                      primary={item.primary}
                      onClick={() => onclickfunction(item.primary)}
                      style={{ color: "black" }}
                    />
                  </ListItem>
                </Link>
              ) : (
                <Link
                  to={item.to}
                  style={{ backgroundColor: "blue" }}
                  className={classes.linkstylesecondary}
                >
                  <ListItem button>
                    <ListItemIcon>{item.icon}</ListItemIcon>
                    <ListItemText
                      primary={item.primary}
                      onClick={() => onclickfunction(item.primary)}
                      style={{ color: "black" }}
                    />
                  </ListItem>
                </Link>
              )}
            </>
          );
        })}
    </List>
    //   </Toolbar>
    // </AppBar>
  );
}



import React from "react";
import axios from "axios";
export const URL = "http://13.233.172.20/api/"; // PROD URL
// export const URL="http://127.0.0.1:8000/api/" // LOCAL URL

export const ENDPOINTS = {
  USER_LOGIN: "user/login/",
  PARKING_LISTINGS: "host/listings/",
  PRICING: "pricing/getPricingDetails"
};

export const UserLogin = async body => {
  return await axios.post(
    URL + ENDPOINTS.USER_LOGIN,
    body,
    {
      params: ""
    },
    {
      timeout: 3 * 60 * 1000
    }
  );
};

export const GetParkingListings = async () => {
  return await axios.get(URL + ENDPOINTS.PARKING_LISTINGS, {
    params: {
      access_token:
        "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJtb2JpbGUiOjg0NjAyNzY3OTd9.qfVD9lzabj3J59wqA1eYLb9bb7-_sb6GzLtV9t7HyLw"
    }
  });
};

// export const GetTable = async () => {
//   return await axios.get(URL + ENDPOINTS.PRICING, {
//     params: {
//       access_token:
//         "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJtb2JpbGUiOjg0NjAyNzY3OTd9.qfVD9lzabj3J59wqA1eYLb9bb7-_sb6GzLtV9t7HyLw",
//       parking_table_id: 2029
//     }
//   });
// };


///////// select file for dropdown ////////


import React, { useState, useEffect } from "react";
import clsx from "clsx";
import { makeStyles, useTheme } from "@material-ui/core/styles";
import Input from "@material-ui/core/Input";
import InputLabel from "@material-ui/core/InputLabel";
import MenuItem from "@material-ui/core/MenuItem";
import FormControl from "@material-ui/core/FormControl";
import ListItemText from "@material-ui/core/ListItemText";
import Select from "@material-ui/core/Select";
import Checkbox from "@material-ui/core/Checkbox";
import Chip from "@material-ui/core/Chip";
// import { GetLocationListings } from "../../../util/Services/Services";

const useStyles = makeStyles(theme => ({
  formControl: {
    margin: theme.spacing(1),
    minWidth: 200,
    maxWidth: 300
  },
  chips: {
    display: "flex",
    flexWrap: "wrap"
  },
  chip: {
    margin: 2
  },
  noLabel: {
    marginTop: theme.spacing(3)
  },
  selectBar: {
    outline: "0px",
    border: "none",
    color: "black",
    borderRadius: "50px",
    backgroundColor: "#00BBDC"
  }
}));

const ITEM_HEIGHT = 48;
const ITEM_PADDING_TOP = 8;
const MenuProps = {
  PaperProps: {
    style: {
      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,
      width: 250
    }
  }
};

const names = [
  "Goregoan East 1",
  "Goregoan East 2",
  "Goregoan East 3",
  "Goregoan East 4",
  "Goregoan East",
  "Goregoan East",
  "Goregoan East",
  "Goregoan East",
  "Goregoan East",
  "Goregoan East"
];

function getStyles(name, personName, theme) {
  return {
    fontWeight:
      personName.indexOf(name) === -1
        ? theme.typography.fontWeightRegular
        : theme.typography.fontWeightMedium
  };
}

export default function MultipleSelect(props) {
  const classes = useStyles();
  const theme = useTheme();
  const [personName, setPersonName] = React.useState([]);

  // const [areaNames, setAreaNames] = useState("");

  // useEffect(() => {
  //   GetParkingListings()
  //     .then(res => {
  //       console.log(res);
  //       setAreaNames(res.data.parking_list);
  //     })
  //     .catch(err => console.log(err));
  // }, []);
  // console.log(areaNames);

  const handleChange = event => {
    setPersonName(event.target.value);
  };

  const handleChangeMultiple = event => {
    const { options } = event.target;
    const value = [];
    for (let i = 0, l = options.length; i < l; i += 1) {
      if (options[i].selected) {
        value.push(options[i].value);
      }
    }
    setPersonName(value);
  };

  return (
    <div>
      <FormControl className={classes.formControl} style={props.style}>
        {/* <InputLabel id="demo-simple-select-autowidth-label">Age</InputLabel> */}
        <Select
          style={props.style1}
          className={classes.selectBar}
          labelId="demo-simple-select-outlined-label"
          id="demo-simple-select-outlined"
          value={personName}
          onChange={handleChange}
          input={<Input disableUnderline={true} />}
          MenuProps={MenuProps}
        >
          <MenuItem>Location</MenuItem>
          {names.map(name => (
            <MenuItem
              key={name}
              value={name}
              style={getStyles(name, personName, theme)}
            >
              {name}
            </MenuItem>
          ))}
        </Select>
      </FormControl>
    </div>
  );
}

    